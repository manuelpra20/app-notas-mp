{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","components/reducers/notesReducer.js","components/reducers/uiReducer.js","store/store.js","components/reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","console","log","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","notesDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1836e5cd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst  firebaseConfig = {\r\n    apiKey: \"AIzaSyDquR29Wkn-8v_SS5AXic2Smgzvsokb1xs\",\r\n    authDomain: \"react-firebasemp.firebaseapp.com\",\r\n    projectId: \"react-firebasemp\",\r\n    storageBucket: \"react-firebasemp.appspot.com\",\r\n    messagingSenderId: \"417271931906\",\r\n    appId: \"1:417271931906:web:a473592d9da937e3eb331b\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n// base de datos\r\nconst db = firebase.firestore();\r\n\r\n// para hacer autenticacion con google \r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState  ) => {\r\n        setValues(  newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n\r\n","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth Logout]', \r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n\r\n}  ","\r\nimport { types } from '../types/types';\r\n\r\nexport const setError = (err) => ( {\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const revomeError = () => ( {\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading  = () => ({\r\n    type: types.uiStartLoading\r\n})\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    \r\n   const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n   const notes = [];\r\n\r\n   notesSnap.forEach( snapHijo  => {\r\n      notes.push({\r\n         id: snapHijo.id,\r\n         ...snapHijo.data()\r\n      })\r\n   });\r\n   console.log(notes);\r\n   return notes;\r\n}\r\n\r\n\r\n","export const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/djffy8o9i/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file );\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        }); \r\n        if ( resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw  await resp.json();\r\n        }\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return  async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n       \r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n        console.log( doc );\r\n        \r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note ) => (\r\n    {\r\n        type: types.notesAddNew,\r\n        payload: {\r\n            id, ...note\r\n        }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n \r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n        \r\n        dispatch(refreshNote( note.id, noteToFirestore ));\r\n        Swal.fire('Saved',note.title, 'success');\r\n    }\r\n} \r\n\r\nexport const refreshNote = (id, note)  => ({\r\n    type: types.notesUpdate,\r\n    payload: { \r\n        id, \r\n        note: {\r\n            id, \r\n            ...note \r\n        }\r\n     }\r\n})\r\n\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const {  active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploding...',\r\n            text: 'Por Favor Espere...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload( file );\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        \r\n        Swal.close();\r\n        \r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { startLoading, finishLoading } from './ui';\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n        \r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                dispatch(login( user.uid, user.displayName )); \r\n\r\n                    dispatch( finishLoading() );\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n       \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n\r\n        .then( async({ user }) => {\r\n\r\n            await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            Swal.fire('Error', e.message, 'error');\r\n        } )\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    \r\n    return ( dispatch ) => {\r\n            firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName \r\n    }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return  async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout  = () => ({\r\n    type: types.logout \r\n})\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n   \r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'nando@gmail.com',\r\n        password: '123456' \r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n       dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            \r\n            <form className=\"animate__animated animate__fadeIn animate_faster\"  onSubmit={ handleLogin }>\r\n\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Email\" \r\n                  name=\"email\" \r\n                  className=\"auth__input\"\r\n                  autoComplete=\"off\" \r\n                  value={ email }  \r\n                  onChange={handleInputChange} \r\n                />\r\n\r\n                <input  \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  name=\"password\"  \r\n                  className=\"auth__input\" \r\n                  value={ password } \r\n                  onChange={handleInputChange}/>\r\n\r\n                <button \r\n                  type=\"submit\"\r\n                  className=\"btn-primary btn btn-block\" \r\n                  disabled={ loading }                   \r\n                >Ingresar\r\n                </button>\r\n\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                      className=\"google-btn\" \r\n                      onClick={ handleGoogleLogin } \r\n                    >\r\n\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img \r\n                            className=\"google-icon\" \r\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" \r\n                            alt=\"google button\" \r\n                        />\r\n                    </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link \r\n                  className=\"link\" \r\n                  to=\"/auth/register\"\r\n                >Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n  \r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport{setError, revomeError} from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n\r\n        name: 'Hernando',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    })\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n      if ( name.trim().length === 0 ){\r\n\r\n          dispatch( setError( 'Name is required') )\r\n          return false;\r\n      }  else if ( !validator.isEmail( email ) ){\r\n\r\n           dispatch(setError('email is not valid') )\r\n           return false;\r\n      } else if ( password !== password2 || password2.length < 5 ) {\r\n\r\n          dispatch( setError('Password should be at least 6 characters and match each other') )\r\n          return false \r\n      }\r\n\r\n\r\n      dispatch( revomeError() );\r\n      return true;\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form className=\"animate__animated animate__fadeIn animate_faster\" onSubmit={ handleRegister } >\r\n\r\n               {\r\n                   msgError && \r\n                (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                )\r\n               }\r\n\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Name\" \r\n                  name=\"name\" \r\n                  className=\"auth__input\"   \r\n                  value={ name }   \r\n                  onChange={ handleInputChange }  \r\n                  autoComplete=\"off\" \r\n                />\r\n\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Email\" \r\n                  name=\"email\" \r\n                  className=\"auth__input\"  \r\n                  value={ email }  \r\n                  onChange={ handleInputChange }  \r\n                  autoComplete=\"off\" \r\n                />\r\n\r\n                <input   \r\n                  type=\"password\" \r\n                  placeholder=\"Password\" \r\n                  name=\"password\"  \r\n                  className=\"auth__input\" \r\n                  value={ password } \r\n                  onChange={ handleInputChange }  \r\n                  autoComplete=\"off\" \r\n                />\r\n                \r\n                <input  \r\n                  type=\"password2\" \r\n                  placeholder=\"Confirm Password\" \r\n                  name=\"confirm\"  \r\n                  className=\"auth__input\" \r\n                  value={ password2 } \r\n                  onChange={ handleInputChange } \r\n                  autoComplete=\"off\" \r\n                />\r\n\r\n                <button \r\n                  className=\"btn-primary btn btn-block mb-5\" \r\n                  type=\"submit\" \r\n                >Registar\r\n                </button>\r\n\r\n                <Link \r\n                  className=\"link\" \r\n                  to=\"/auth/login\"\r\n                > Already registered? \r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n       <div className=\"auth__main\">\r\n           <div className=\"auth__box-container\">\r\n           <Switch>\r\n               <Route \r\n                 exact \r\n                 path=\"/auth/login\" \r\n                 component={ LoginScreen } \r\n                />\r\n               <Route \r\n                 exact \r\n                 path=\"/auth/register\" \r\n                 component={ RegisterScreen } \r\n                />\r\n               <Redirect \r\n                  to=\"/auth/login\" \r\n                />\r\n           </Switch>\r\n           </div>\r\n           \r\n       </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry= ({ id, date, title, body, url }) => {\r\n\r\n\r\n  const notesDate = moment( date ); \r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch( \r\n      activeNote( id, {\r\n      date, title, body, url\r\n      })\r\n    );\r\n  }\r\n\r\n  \r\n  \r\n\r\n    return (\r\n       <div  onClick={ handleEntryClick } className=\"journal__entry pointer animate__animated animate__fadeIn animate_faster\">\r\n\r\n              {\r\n                url &&\r\n                 <div className=\"journal__entry-picture\" style={{ backgroundSize: 'cover', backgroundImage:  `url(${ url })` }}>\r\n                 </div>\r\n              }\r\n               \r\n               <div className=\"journal__entry-body\">\r\n                 \r\n                   <p className=\"journal__entry-title\">\r\n                       { title }\r\n                   </p>\r\n\r\n                   <p className=\"journal__entry-content\">\r\n                    { body }\r\n                   </p>\r\n\r\n               </div>\r\n\r\n               <div className=\"journal__entry-date-box\"> \r\n\r\n                 <span> { notesDate.format('dddd') } </span>\r\n\r\n                 <h4> { notesDate.format('Do') } </h4>\r\n\r\n               </div>\r\n       </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\n\r\nexport const JournalEntries= () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n    \r\n\r\n    return (\r\n       <div  className=\"journal__entries \">\r\n                {\r\n                    notes.map( note => (\r\n                        <JournalEntry \r\n                           key={ note.id } \r\n                           { ...note }\r\n                        />\r\n                     ) )\r\n                }\r\n       </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport {JournalEntries} from './JournalEntries';\r\n\r\n\r\nexport const Sidebar= () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   const  hanleLogout = () => {\r\n        dispatch( startLogout() )\r\n   }\r\n\r\n   const handleAddNew = () => {\r\n       dispatch( startNewNote() );\r\n   }\r\n\r\n   \r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal_sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i> \r\n                    <span> { name } </span>\r\n                </h3>\r\n                <button \r\n                  onClick={ hanleLogout }\r\n                  className=\"btn\"\r\n                >Salir</button>\r\n            </div>\r\n\r\n            <div \r\n               onClick={ handleAddNew }\r\n               className=\"journal__new-entry\"\r\n            >\r\n\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n\r\n               <p className=\"mt-5\"> Nueva Nota</p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSave = () => {\r\n       dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const  handlePictuureClick  = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ){\r\n            dispatch( startUploading( file )  );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            \r\n            <span>28 de agosto 2021</span>\r\n\r\n            <input name=\"file\" id=\"fileSelector\" type=\"file\" style={{ display: 'none' }} onChange={ handleFileChange } />\r\n\r\n\r\n            <div>\r\n                    <button \r\n                      className=\"btn\"\r\n                      onClick={ handlePictuureClick }\r\n\r\n                    > \r\n                            Selecionar Imagen\r\n                    </button>\r\n                    <button onClick={ handleSave } className=\"btn \"> \r\n                            Guardar\r\n                    </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from '../notes/NotesAppBar';\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        if  ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n        \r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n           <div className=\"notes__content\">\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Algún título\" \r\n                  className=\"notes__title-input\" \r\n                  autoComplete=\"off\" \r\n                  onChange={ handleInputChange } \r\n                  value={ title } \r\n                  name=\"title\" \r\n                />\r\n\r\n                <textarea \r\n                  placeholder=\"Que tal tu dia?\" \r\n                  className=\"notes__textarea\" \r\n                  value={ body } \r\n                  onChange={ handleInputChange } \r\n                  name=\"body\"\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                           <img alt=\"imagen\" src={note.url} />\r\n                        </div>\r\n                    )\r\n                   \r\n                }\r\n\r\n           </div>\r\n\r\n                <button className=\"btn btn-danger\" onClick={handleDelete}  >Eliminar</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p >\r\n            Seleccionar algo\r\n                <br />\r\n                para crea una entrada!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport  { NothingSelected } from './NothingSelected';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__main_content animate__animated animate__fadeIn animate_faster\">\r\n            \r\n            <Sidebar />\r\n            \r\n                <main>\r\n\r\n                    {\r\n                        ( active )\r\n                            ? ( <NoteScreen /> )\r\n                            : ( <NothingSelected /> )\r\n                    }\r\n                    \r\n                   \r\n                </main>\r\n          \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  \r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setisLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else{\r\n                setisLoggedIn( false );\r\n            }\r\n            setChecking(false);\r\n        }); \r\n        \r\n    }, [ dispatch, setChecking, setisLoggedIn ])\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Please Wait....</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\"\r\n                           component={ AuthRouter } \r\n                           isAuthenticated={ isLoggedIn }\r\n                    />\r\n                    <PrivateRoute  \r\n                           exact \r\n                           isAuthenticated={ isLoggedIn }\r\n                           path=\"/\" \r\n                           component={ JournalScreen } \r\n                    />\r\n                    <Redirect \r\n                            to=\"/auth/login\" \r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                    ? action.payload.note \r\n                    : note\r\n                )\r\n            } \r\n            \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }  \r\n            \r\n        case types.notesLogoutCleaning: \r\n          return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n          }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.uiSetError:\r\n        return {\r\n            ...state,\r\n            msgError: action.payload\r\n        }\r\n        case types.uiRemoveError:\r\n        return {\r\n            ...state,\r\n            msgError: null\r\n        }\r\n\r\n        case types.uiStartLoading:\r\n        return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n\r\n        case types.uiFinishLoading:\r\n        return {\r\n            ...state,\r\n            loading: false\r\n        }\r\n              \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../components/reducers/authReducer';\r\nimport { notesReducer } from '../components/reducers/notesReducer';\r\nimport { uiReducer } from '../components/reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n     reducers, \r\n     composeEnhancers( applyMiddleware( thunk ) )\r\n);","import { types } from \"../../types/types\";\r\n\r\n\r\n// lo que se va a mnejar: {\r\n    // uid: dasldhahfkfhlfhjklfasf,\r\n    // name: 'manuel'\r\n// }\r\n\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n                <AppRouter />\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\n\nReactDOM.render(\n  \n    <JournalApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}